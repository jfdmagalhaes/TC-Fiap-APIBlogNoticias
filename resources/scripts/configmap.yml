# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: sql-pv-claim
#   labels:
#     app: sql
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi #1 GB
# ---
# db-persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sql-data-persisent-volume-claim
spec:
  volumeName: sql-data-persisent-volume
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---

# db-persistent-volume.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sql-data-persisent-volume
  labels:
    type: local
spec:
  claimRef:
    namespace: default
    name: sql-data-persisent-volume-claim
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/opt/mssql/data"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: init-script-configmap
data:
  init.sql: |-
    create database db_noticias;
    GO

    IF OBJECT_ID(N'dbo.Noticias') IS NOT NULL  
       DROP TABLE [dbo].Noticias;  
    GO

    use db_noticias
    CREATE TABLE Noticias (
        Id INT PRIMARY KEY IDENTITY,
        Titulo NVARCHAR(255) NOT NULL,
        Conteudo NVARCHAR(MAX) NOT NULL,
        DataPublicacao DATETIME NOT NULL,
        Autor NVARCHAR(255) NOT NULL
    );

    GO