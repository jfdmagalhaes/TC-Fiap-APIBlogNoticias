# apiVersion: v1
# kind: Pod
# metadata:
#   name: pod-blognews
#   labels:
#     app: pod-blognews
# spec:
#   containers:
#   - name: pod-blognews
#     image: jfdmagalhaes/blognews-fiap:v2 
#     ports:
#     - containerPort: 8080
#       hostPort: 8080  # Expondo a porta 8080 do contêiner diretamente no nível do pod
#   - name: sql-server
#     image: mcr.microsoft.com/mssql/server:2019-latest
#     env:
#     - name: SA_PASSWORD
#       value: "Pass@word"
#     - name: ACCEPT_EULA
#       value: "Y"
#     - name: MSSQL_PID
#       value: "Developer"
#     ports:
#     - containerPort: 1433
#       hostPort: 1433  # Expondo a porta 8080 do contêiner diretamente no nível do pod
#     volumeMounts:
#     - name: init-script
#       mountPath: /var/opt/mssql/init-scripts
#       readOnly: true

#   volumes:
#   - name: init-script
#     configMap:
#       name: init-script-configmap

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: deployment-blognews
#   labels:
#     app: pod-blognews
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: pod-blognews
#   template:
#     metadata:
#       labels:
#         app: pod-blognews
#     spec:
#       containers:
#       - name: sql-server
#         image: mcr.microsoft.com/mssql/server:2019-latest
#         env:
#         - name: SA_PASSWORD
#           value: "Pass@word"
#         - name: ACCEPT_EULA
#           value: "Y"
#         - name: MSSQL_PID
#           value: "Developer"
#         ports:
#         - containerPort: 1433
#         volumeMounts:
#         - name: mssql-data
#           mountPath: /var/opt/mssql/data
#         - name: init-script  # Monta o volume com o script de inicialização
#           mountPath: /docker-entrypoint-initdb.d 
#       - name: pod-blognews
#         image: jfdmagalhaes/blognews-fiap:v2 
#         env:
#           - name: ConnectionStrings_DefaultConnection
#             value: Server=localhost;Database=db_noticias;User=sa;Password=Pass@word;TrustServerCertificate=True;
#         ports:
#         - containerPort: 8080
#         livenessProbe:
#           # exec:
#           #  command:
#           #   - curl
#           #   - -s
#           #   - http://localhost:1433
#           httpGet:
#             path: /liveness
#             port: 81
#           initialDelaySeconds: 30
#             # periodSeconds: 10
#       volumes:
#       - name: mssql-data
#         persistentVolumeClaim:
#           claimName: sql-pv-claim
#       - name: init-script
#         configMap:
#           name: init-script-configmap


apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
spec:
  selector:
    matchLabels:
      app: pod-blognews
  template:
    metadata:
      labels:
        app: pod-blognews
    spec:
      containers:
      - name: blognews-container
        image: jfdmagalhaes/blognews-fiap:v2
        imagePullPolicy: Never
        env:
          - name: ConnectionStrings_DefaultConnection
            value: Server=localhost;Database=db_noticias;User=sa;Password=Pass@word;TrustServerCertificate=True;
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80